{"version":3,"sources":["containers/sample/select/data/data.js","containers/sample/select/SelectContainer.js"],"names":["colourOptions","value","label","color","isFixed","isDisabled","groupedOptions","options","rating","groupStyles","display","alignItems","justifyContent","groupBadgeStyles","backgroundColor","borderRadius","fontSize","fontWeight","lineHeight","minWidth","padding","textAlign","formatGroupLabel","data","react_default","a","createElement","style","length","animatedComponents","makeAnimated","SelectContainer","_useState","useState","_useState2","Object","slicedToArray","selectedOption1","setSelectedOption1","_useState3","_useState4","selectedOption2","setSelectedOption2","_useState5","_useState6","selectedOption3","setSelectedOption3","Container","className","react_select_browser_esm","onChange","selectedOption","components","isMulti"],"mappings":"mLAAaA,EAAgB,CAC3B,CAAEC,MAAO,QAASC,MAAO,QAASC,MAAO,UAAWC,SAAS,GAC7D,CAAEH,MAAO,OAAQC,MAAO,OAAQC,MAAO,UAAWE,YAAY,GAC9D,CAAEJ,MAAO,SAAUC,MAAO,SAAUC,MAAO,WAC3C,CAAEF,MAAO,MAAOC,MAAO,MAAOC,MAAO,UAAWC,SAAS,GACzD,CAAEH,MAAO,SAAUC,MAAO,SAAUC,MAAO,WAC3C,CAAEF,MAAO,SAAUC,MAAO,SAAUC,MAAO,WAC3C,CAAEF,MAAO,QAASC,MAAO,QAASC,MAAO,WACzC,CAAEF,MAAO,SAAUC,MAAO,SAAUC,MAAO,WAC3C,CAAEF,MAAO,QAASC,MAAO,QAASC,MAAO,WACzC,CAAEF,MAAO,SAAUC,MAAO,SAAUC,MAAO,YAkGhCG,EAAiB,CAC5B,CACEJ,MAAO,UACPK,QAASP,GAEX,CACEE,MAAO,WACPK,QAtG0B,CAC5B,CAAEN,MAAO,UAAWC,MAAO,UAAWM,OAAQ,QAC9C,CAAEP,MAAO,YAAaC,MAAO,YAAaM,OAAQ,QAClD,CAAEP,MAAO,aAAcC,MAAO,aAAcM,OAAQ,QACpD,CAAEP,MAAO,iBAAkBC,MAAO,iBAAkBM,OAAQ,YCTxDD,WAAU,CACd,CAAEN,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,UAAWC,MAAO,aAGvBO,EAAc,CAClBC,QAAS,OACTC,WAAY,SACZC,eAAgB,iBAEZC,EAAmB,CACvBC,gBAAiB,UACjBC,aAAc,MACdZ,MAAO,UACPO,QAAS,eACTM,SAAU,GACVC,WAAY,SACZC,WAAY,IACZC,SAAU,EACVC,QAAS,2BACTC,UAAW,UAIPC,EAAmB,SAAAC,GAAI,OAC3BC,EAAAC,EAAAC,cAAA,OAAKC,MAAOlB,GACVe,EAAAC,EAAAC,cAAA,YAAOH,EAAKrB,OACZsB,EAAAC,EAAAC,cAAA,QAAMC,MAAOd,GAAmBU,EAAKhB,QAAQqB,UAI3CC,EAAqBC,cAqDZC,UAnDS,WAAM,IAAAC,EACkBC,mBAAS,MAD3BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACrBK,EADqBH,EAAA,GACJI,EADIJ,EAAA,GAAAK,EAEkBN,mBAAS,MAF3BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAErBE,EAFqBD,EAAA,GAEJE,EAFIF,EAAA,GAAAG,EAGkBV,mBAAS,MAH3BW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGrBE,EAHqBD,EAAA,GAGJE,EAHIF,EAAA,GAiB5B,OACEpB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACEvB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIsB,UAAU,OACZxB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACE1C,QAASA,EACTN,MAAOoC,EACPa,SApBU,SAAAC,GACpBb,EAAmBa,OAsBb3B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEG,WAAYvB,EACZ5B,MAAOwC,EACPS,SAvBU,SAAAC,GACpBT,EAAmBS,IAuBT5C,QAASP,EACTqD,SAAO,KAGX7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACE1C,QAASD,EACTgB,iBAAkBA,EAClBrB,MAAO4C,EACPK,SA7BU,SAAAC,GACpBL,EAAmBK","file":"static/js/7.b9c45e0f.chunk.js","sourcesContent":["export const colourOptions = [\n  { value: 'ocean', label: 'Ocean', color: '#00B8D9', isFixed: true },\n  { value: 'blue', label: 'Blue', color: '#0052CC', isDisabled: true },\n  { value: 'purple', label: 'Purple', color: '#5243AA' },\n  { value: 'red', label: 'Red', color: '#FF5630', isFixed: true },\n  { value: 'orange', label: 'Orange', color: '#FF8B00' },\n  { value: 'yellow', label: 'Yellow', color: '#FFC400' },\n  { value: 'green', label: 'Green', color: '#36B37E' },\n  { value: 'forest', label: 'Forest', color: '#00875A' },\n  { value: 'slate', label: 'Slate', color: '#253858' },\n  { value: 'silver', label: 'Silver', color: '#666666' },\n];\n\nexport const flavourOptions = [\n  { value: 'vanilla', label: 'Vanilla', rating: 'safe' },\n  { value: 'chocolate', label: 'Chocolate', rating: 'good' },\n  { value: 'strawberry', label: 'Strawberry', rating: 'wild' },\n  { value: 'salted-caramel', label: 'Salted Caramel', rating: 'crazy' },\n];\n\nexport const stateOptions = [\n  { value: 'AL', label: 'Alabama' },\n  { value: 'AK', label: 'Alaska' },\n  { value: 'AS', label: 'American Samoa' },\n  { value: 'AZ', label: 'Arizona' },\n  { value: 'AR', label: 'Arkansas' },\n  { value: 'CA', label: 'California' },\n  { value: 'CO', label: 'Colorado' },\n  { value: 'CT', label: 'Connecticut' },\n  { value: 'DE', label: 'Delaware' },\n  { value: 'DC', label: 'District Of Columbia' },\n  { value: 'FM', label: 'Federated States Of Micronesia' },\n  { value: 'FL', label: 'Florida' },\n  { value: 'GA', label: 'Georgia' },\n  { value: 'GU', label: 'Guam' },\n  { value: 'HI', label: 'Hawaii' },\n  { value: 'ID', label: 'Idaho' },\n  { value: 'IL', label: 'Illinois' },\n  { value: 'IN', label: 'Indiana' },\n  { value: 'IA', label: 'Iowa' },\n  { value: 'KS', label: 'Kansas' },\n  { value: 'KY', label: 'Kentucky' },\n  { value: 'LA', label: 'Louisiana' },\n  { value: 'ME', label: 'Maine' },\n  { value: 'MH', label: 'Marshall Islands' },\n  { value: 'MD', label: 'Maryland' },\n  { value: 'MA', label: 'Massachusetts' },\n  { value: 'MI', label: 'Michigan' },\n  { value: 'MN', label: 'Minnesota' },\n  { value: 'MS', label: 'Mississippi' },\n  { value: 'MO', label: 'Missouri' },\n  { value: 'MT', label: 'Montana' },\n  { value: 'NE', label: 'Nebraska' },\n  { value: 'NV', label: 'Nevada' },\n  { value: 'NH', label: 'New Hampshire' },\n  { value: 'NJ', label: 'New Jersey' },\n  { value: 'NM', label: 'New Mexico' },\n  { value: 'NY', label: 'New York' },\n  { value: 'NC', label: 'North Carolina' },\n  { value: 'ND', label: 'North Dakota' },\n  { value: 'MP', label: 'Northern Mariana Islands' },\n  { value: 'OH', label: 'Ohio' },\n  { value: 'OK', label: 'Oklahoma' },\n  { value: 'OR', label: 'Oregon' },\n  { value: 'PW', label: 'Palau' },\n  { value: 'PA', label: 'Pennsylvania' },\n  { value: 'PR', label: 'Puerto Rico' },\n  { value: 'RI', label: 'Rhode Island' },\n  { value: 'SC', label: 'South Carolina' },\n  { value: 'SD', label: 'South Dakota' },\n  { value: 'TN', label: 'Tennessee' },\n  { value: 'TX', label: 'Texas' },\n  { value: 'UT', label: 'Utah' },\n  { value: 'VT', label: 'Vermont' },\n  { value: 'VI', label: 'Virgin Islands' },\n  { value: 'VA', label: 'Virginia' },\n  { value: 'WA', label: 'Washington' },\n  { value: 'WV', label: 'West Virginia' },\n  { value: 'WI', label: 'Wisconsin' },\n  { value: 'WY', label: 'Wyoming' },\n];\n\nexport const optionLength = [\n  { value: 1, label: 'general' },\n  {\n    value: 2,\n    label:\n      'Evil is the moment when I lack the strength to be true to the Good that compels me.',\n  },\n  {\n    value: 3,\n    label:\n      \"It is now an easy matter to spell out the ethic of a truth: 'Do all that you can to persevere in that which exceeds your perseverance. Persevere in the interruption. Seize in your being that which has seized and broken you.\",\n  },\n];\n\nexport const dogOptions = [\n  { id: 1, label: 'Chihuahua' },\n  { id: 2, label: 'Bulldog' },\n  { id: 3, label: 'Dachshund' },\n  { id: 4, label: 'Akita' },\n];\n\n// let bigOptions = [];\n// for (let i = 0; i < 10000; i++) {\n// \tbigOptions = bigOptions.concat(colourOptions);\n// }\n\nexport const groupedOptions = [\n  {\n    label: 'Colours',\n    options: colourOptions,\n  },\n  {\n    label: 'Flavours',\n    options: flavourOptions,\n  },\n];\n","import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport { colourOptions, groupedOptions } from './data/data';\n\nimport './style.css';\n\nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' },\n];\n\nconst groupStyles = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n};\nconst groupBadgeStyles = {\n  backgroundColor: '#EBECF0',\n  borderRadius: '2em',\n  color: '#172B4D',\n  display: 'inline-block',\n  fontSize: 12,\n  fontWeight: 'normal',\n  lineHeight: '1',\n  minWidth: 1,\n  padding: '0.16666666666667em 0.5em',\n  textAlign: 'center',\n};\n\n\nconst formatGroupLabel = data => (\n  <div style={groupStyles}>\n    <span>{data.label}</span>\n    <span style={groupBadgeStyles}>{data.options.length}</span>\n  </div>\n);\n\nconst animatedComponents = makeAnimated();\n\nconst SelectContainer = () => {\n  const [selectedOption1, setSelectedOption1] = useState(null);\n  const [selectedOption2, setSelectedOption2] = useState(null);\n  const [selectedOption3, setSelectedOption3] = useState(null);\n  \n  const handleChange1 = selectedOption => {\n    setSelectedOption1(selectedOption);\n  };\n\n  const handleChange2 = selectedOption => {\n    setSelectedOption2(selectedOption);\n  };\n\n  const handleChange3 = selectedOption => {\n    setSelectedOption3(selectedOption);\n  };\n\n  return (\n    <Container>\n      <div>\n        <ul className=\"lst\">\n          <li>\n            <Select\n              options={options}\n              value={selectedOption1}\n              onChange={handleChange1}\n            />\n          </li>\n          <li>\n            <Select\n              components={animatedComponents}\n              value={selectedOption2}\n              onChange={handleChange2}\n              options={colourOptions}\n              isMulti\n            />\n          </li>\n          <li>\n            <Select\n              options={groupedOptions}\n              formatGroupLabel={formatGroupLabel}\n              value={selectedOption3}\n              onChange={handleChange3}\n            />\n          </li>\n        </ul>\n      </div>\n    </Container>\n  )\n}\n\nexport default SelectContainer;"],"sourceRoot":""}