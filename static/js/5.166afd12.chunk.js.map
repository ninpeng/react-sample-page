{"version":3,"sources":["containers/phaser/PhaserContainer.js"],"names":["PhaserContainer","game","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","id","this","load","setBaseURL","image","add","emitter","particles","createEmitter","speed","scale","start","end","blendMode","logo","physics","setVelocity","setBounce","setCollideWorldBounds","startFollow","config","type","Phaser","AUTO","width","height","parent","default","arcade","gravity","y","scene","preload","create","mode","Scale","ScaleModes","FIT","Game","destroy","Component"],"mappings":"kMAIMA,6MACJC,KAAO,6EAGL,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,+BAEFF,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,OAAKG,GAAG,+CAMdC,KAAKC,KAAKC,WAAW,eAErBF,KAAKC,KAAKE,MAAM,MAAO,cACvBH,KAAKC,KAAKE,MAAM,OAAQ,oBACxBH,KAAKC,KAAKE,MAAM,MAAO,4CAIvBH,KAAKI,IAAID,MAAM,IAAK,IAAK,OAEzB,IAEIE,EAFYL,KAAKI,IAAIE,UAAU,OAEXC,cAAc,CAClCC,MAAO,IACPC,MAAO,CAAEC,MAAO,EAAGC,IAAK,GACxBC,UAAW,QAGXC,EAAOb,KAAKc,QAAQV,IAAID,MAAM,IAAK,IAAK,QAE5CU,EAAKE,YAAY,IAAK,KACtBF,EAAKG,UAAU,EAAG,GAClBH,EAAKI,uBAAsB,GAE3BZ,EAAQa,YAAYL,+CAIpB,IAAIM,EAAS,CACTC,KAAMC,IAAOC,KACbC,MAAO,IACPC,OAAQ,IACRC,OAAQ,SACRX,QAAS,CACLY,QAAS,SACTC,OAAQ,CACJC,QAAS,CAAEC,EAAG,OAGtBC,MAAO,CACHC,QAAS/B,KAAK+B,QACdC,OAAQhC,KAAKgC,QAEjBvB,MAAO,CACLwB,KAAMZ,IAAOa,MAAMC,WAAWC,MAIpCpC,KAAKP,KAAO,IAAI4B,IAAOgB,KAAKlB,kDAIxBnB,KAAKP,OACPO,KAAKP,KAAK6C,UACVtC,KAAKP,KAAO,aAtEY8C,aA2Ef/C","file":"static/js/5.166afd12.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Phaser from 'phaser';\n\nclass PhaserContainer extends Component {\n  game = null;\n\n  render () {\n    return(\n      <Container>\n        <Row>\n          <h2>Phaser3 in React</h2>\n        </Row>\n        <Row>\n          <div id=\"phaser\"/>\n        </Row>\n      </Container>)\n  }\n\n  preload () {\n    this.load.setBaseURL('assets/img/');\n\n    this.load.image('sky', 'space3.png');\n    this.load.image('logo', 'phaser3-logo.png');\n    this.load.image('red', 'red.png');\n  }\n\n  create () {\n    this.add.image(400, 300, 'sky');\n\n    var particles = this.add.particles('red');\n\n    var emitter = particles.createEmitter({\n        speed: 100,\n        scale: { start: 1, end: 0 },\n        blendMode: 'ADD'\n    });\n\n    var logo = this.physics.add.image(400, 100, 'logo');\n\n    logo.setVelocity(100, 200);\n    logo.setBounce(1, 1);\n    logo.setCollideWorldBounds(true);\n\n    emitter.startFollow(logo);\n  }\n\n  componentDidMount() {\n    var config = {\n        type: Phaser.AUTO,\n        width: 800,\n        height: 600,\n        parent: 'phaser',\n        physics: {\n            default: 'arcade',\n            arcade: {\n                gravity: { y: 200 }\n            }\n        },\n        scene: {\n            preload: this.preload,\n            create: this.create\n        },\n        scale: {\n          mode: Phaser.Scale.ScaleModes.FIT\n        }\n    };\n\n    this.game = new Phaser.Game(config);\n  }\n\n  componentWillUnmount() {\n    if (this.game) {\n      this.game.destroy();\n      this.game = null;\n    }\n  }\n}\n\nexport default PhaserContainer;\n"],"sourceRoot":""}